;;; -*- coding: utf-8; lexical-binding: t -*-

;;; User Info

(setq user-full-name "John Doe"
      user-mail-address "doe@zoho.com")


;;; Themes

;(require 'aspirin-eink-theme)
;(require 'aspirin-zenburn-theme)


;;; Software Collections

(setq  ; `GNU Coreutils'
 dired-listing-switches "-Avhn --group-directories-first --time-style=long-iso"
 ls-lisp-use-insert-directory-program t)


;;; Modules

(require 'aspirin-ido-lift)

(progn
  (require 'aspirin-translator)
  (require 'aspirin-translator-keymap))

(require 'aspirin-spell-checker)

(progn  ; vcs on the right argin
  (require 'aspirin-git)
  (setq diff-hl-side 'right)
  (diff-hl-margin-mode))

(progn  ; use russian keyboard layout (C-\)
  (require 'aspirin-translit+)
  (set-language-environment 'UTF-8)
  (setq default-input-method "translit+"))

(progn  ; 0.829
  (when (or (display-graphic-p)
              (fboundp 'server-running-p))
    (require 'aspirin-ligatures-lift)
    ;; Prog mode
    (add-hook 'prog-mode-hook #'aspirin-set-ligatures)  ; aspirin-use-ligatures
    ;; Haskell REPL
    (add-hook 'haskell-interactive-mode-hook #'aspirin-set-ligatures)
    ;; Scala mode
    (aspirin-add-hook 'scala-mode-hook
      (aspirin-set-ligatures-no-calt
        (aspirin-ligatures-add-or-replace
        '(;;; Mathematical Operators
          ;; U+22C0
          ("/\\" . ?⋀)
          ("\\/" . ?⋁)))))
    ;; Org mode
    (aspirin-add-hook 'org-mode-hook
      (setq-local prettify-symbols-unprettify-at-point nil)
      (aspirin-set-ligatures
        (aspirin-ligatures-delete '("***") (aspirin-pragmata-pro-ligatures))))))

(require 'aspirin-shell-lang)

(require 'aspirin-eshell)

(progn
  (require 'aspirin-org)
  (require 'aspirin-org-keymap))

(progn
  (require 'aspirin-elisp-lang)
  (require 'aspirin-elisp-keymap))

(progn
  (require 'aspirin-python)
  (require 'aspirin-python-keymap))

(progn  ; lua
  (require 'aspirin-lua-lang)
  (with-eval-after-load 'lua-mode
    (aspirin-add-hook 'lua-mode-hook
      (local-set-key (kbd "<C-return>") #'lua-send-region)
      (local-set-key (kbd "<s-return>") #'lua-send-region))))

(require 'aspirin-tramp)

(progn  ; lift
  (require 'aspirin-ag-lift)
  (require 'aspirin-crux-lift))

(progn  ; types
  (require 'aspirin-json-type)
  (require 'aspirin-markdown-type)
  (require 'aspirin-toml-type)
  (require 'aspirin-xml-type)
  (require 'aspirin-yaml-type))

(aspirin-install 'dockerfile-mode)

(progn  ; lonely keymaps
  (require 'aspirin-archive-keymap)
  (require 'aspirin-package-menu-keymap))


(progn  ; Java + macOS
  (setenv "JAVA_HOME" (string-trim-right (shell-command-to-string "/usr/libexec/java_home -v 11.0.11"))))

(require 'aspirin-scala2)

(require 'aspirin-restclient-lift)

(require 'aspirin-redis-lang)


;;; Language Environments

;; set proper language (fixes cyrillic letters in ansi-term)
(setenv "LANG" "ru_RU.UTF-8")

;; default font (the height value is in 1/10pt, so 100 will give you 10pt, etc.)
(set-face-attribute 'default nil :family "PragmataPro Mono Liga" :height 90)

;; font for all unicode characters
(set-fontset-font t 'unicode "PragmataPro Mono Liga" nil 'prepend)

;; override font for cyrillic characters
(set-fontset-font t 'cyrillic "PragmataPro Mono Liga")


;;; Settings

;; use spell check (SLOW-TO-USE)
(setq aspirin-flyspell t)

;; disable lazy font locking, drop to enable (SLOW-TO-USE)
(setq jit-lock-defer-time nil)  ; it doesn't make sense for the eink-theme


;;; Testing

;; run Emacs as a console program
(unless (or (display-graphic-p)
            (fboundp 'server-running-p))
  (run-hooks 'aspirin-after-make-console-frame-hook))

(setq inhibit-compacting-font-caches t)


;;; Key Bindings

;; global key bindings
(aspirin-global-set-key "<f3>"
  (dired "."))  ; instead ranger

(aspirin-global-set-key "<f5>"
  (if (projectile-project-p)
      (projectile-recentf)
    (aspirin-recentf-find-file)))

(aspirin-global-set-key "<f10>"
  (if (projectile-project-p)
      (projectile-run-eshell)
    (eshell)))

(global-set-key (kbd "<f2>") #'buffer-menu)  ; ibuffer
(global-set-key (kbd "<f9>") #'evil-window-next)
(global-set-key (kbd "C-SPC") #'hippie-expand)
(global-set-key (kbd "C-@") #'hippie-expand)  ; C-SPC in terminal
(global-set-key (kbd "C-;") #'smex)

;; evil key bindings
(define-key evil-motion-state-map "zg" #'aspirin-add-word-to-dictionary)
(define-key evil-motion-state-map (kbd "C-;") #'smex)  ; instead ":"
(define-key evil-insert-state-map (kbd "C-;") #'smex)
(define-key evil-insert-state-map "\C-d" #'evil-delete-char)

;; Aliases
(defalias 'projectile-switch-buffer 'projectile-switch-to-buffer)

;; Testing
(global-set-key (kbd "C-x k") #'kill-this-buffer)
(define-key evil-motion-state-map (kbd "<backspace>") #'aspirin-switch-to-prev-buffer)

(define-key evil-motion-state-map (kbd "gt") #'other-frame)
(define-key evil-motion-state-map (kbd "gT") (lambda () (interactive) (other-frame -1)))

(when (equal system-type 'darwin)  ; brew install coreutils
  (setq insert-directory-program "gls"))

(setq confirm-kill-processes nil)
(setq dired-clean-confirm-killing-deleted-buffers nil)

(setq-default truncate-lines t)
(setq-default auto-hscroll-mode 'current-line)
